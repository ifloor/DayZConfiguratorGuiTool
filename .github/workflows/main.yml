name: Flutter Workflow

on:
  push:
    #branches:
      #- main
    tags:
    - 'v*'
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build
        run: flutter build windows

      - name: Move folder
        run: mv .\build\windows\x64\runner\Release .\dayz_configurator_gui_tool

      - name: Compress
        run: Compress-Archive -Path dayz_configurator_gui_tool/* -Destination dayz_configurator_gui_tool.zip

      - name: Upload built zip
        uses: actions/upload-artifact@v3
        with:
          name: dayz_configurator_gui_tool
          path: dayz_configurator_gui_tool.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dayz_configurator_gui_tool.zip
          asset_name: dayz_configurator_gui_tool.zip
          asset_content_type: application/zip